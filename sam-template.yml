AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: AWS lambda for auto-formation purpose.

Parameters:
  ApplicationName:
    Default: 'serverless-cicd'
    Type: String
    Description: Application Name
  DeploymentEnvironment:
    Description: Deployment Environment
    Type: String
Conditions:
  IsProductionCondition: !Equals [ !Ref DeploymentEnvironment, prod ]

Resources:
  MainFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: aws-serverless-cicd-demo-main-function/target/aws-serverless-cicd-demo-main-function-1.0-SNAPSHOT.jar
      Handler: com.example.HelloHandler
      Runtime: java11
      Description: Java function
      FunctionName: !Ref ApplicationName
      MemorySize: 128
      Timeout: 30
      # Function's execution role
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambda_ReadOnlyAccess
        - AWSXrayWriteOnlyAccess
        - AWSLambdaVPCAccessExecutionRole
      Tracing: Active
      AutoPublishAlias: live
      DeploymentPreference:
#          Type: Canary10Percent5Minutes
        Type: !If
          - IsProductionCondition
          - Canary10Percent5Minutes
          - AllAtOnce
        Hooks:
          #           Validation Lambda functions that are run before traffic shifting
          PreTraffic: !Ref PreTrafficHook

  PreTrafficHook:
    Type: AWS::Serverless::Function
    Properties:
      DeploymentPreference:
        Enabled: False
      CodeUri: aws-serverless-cicd-demo-integration-tests/target/aws-serverless-cicd-demo-integration-tests-1.0-SNAPSHOT.jar
      Handler: hooks.PreTrafficHook
      Runtime: java11
      Description: Java function
      FunctionName: CodeDeployHook_prehook
      MemorySize: 1024
      Environment:
        Variables:
          NewLambdaVersion: !Ref MainFunction.Version
          APPLICATION_NAME: !Ref ApplicationName
      Timeout: 60
      # Function's execution role
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
                - "codedeploy:PutLifecycleEventHookExecutionStatus"
              Resource:
                - !Sub 'arn:${AWS::Partition}:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentgroup:${ApplicationName}*'
        - Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
                - "lambda:InvokeFunction"
              Resource: !GetAtt MainFunction.Arn