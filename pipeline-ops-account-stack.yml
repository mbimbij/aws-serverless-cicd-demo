Parameters:
  ApplicationName:
    Default: 'serverless-cicd'
    Type: String
    Description: Application Name
  GithubRepo:
    Default: 'mbimbij/aws-serverless-cicd-demo'
    Type: String
    Description: Github source code repository
  GithubRepoBranch:
    Default: 'main'
    Type: String
    Description: Github source code branch
  SamStackName:
    Default: 'serverless-cicd-application-stack'
    Type: String
    Description: Name of the SAM stack
  TestAccountId:
    Type: String
    Description: Test Account Id
  ProdAccountId:
    Type: String
    Description: Production Account Id
  S3BucketName:
    Type: String
    Description: Operations Account Id
  S3KmsKeyArn:
    Type: String
    Description: artifacts S3 bucket key arn

Resources:
  GithubConnection:
    Type: AWS::CodeStarConnections::Connection
    Properties:
      ConnectionName: !Ref ApplicationName
      ProviderType: GitHub
  BuildProjectRole:
    Type: 'AWS::IAM::Role'
    Description: IAM role for !Ref ApplicationName build resource
    Properties:
      RoleName: !Join
        - '-'
        - - !Ref ApplicationName
          - build-role
      Path: /
      Policies:
        - PolicyName: !Join
            - '-'
            - - !Ref ApplicationName
              - build-policy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action: 
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketAcl
                  - s3:GetBucketLocation
                Resource:
                  - !Sub 'arn:${AWS::Partition}:s3:::${S3BucketName}'
                  - !Sub 'arn:${AWS::Partition}:s3:::${S3BucketName}/*'
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub 'arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*'
      AssumeRolePolicyDocument:
        Statement:
          - Action: "sts:AssumeRole"
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
  PipelineRole:
    Type: 'AWS::IAM::Role'
    Description: IAM role for !Ref ApplicationName pipeline resource
    Properties:
      RoleName: !Join
        - '-'
        - - !Ref ApplicationName
          - pipeline-role
      Path: /
      Policies:
        - PolicyName: !Join
            - '-'
            - - !Ref ApplicationName
              - pipeline-policy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - codestar-connections:UseConnection
                Resource: !Ref GithubConnection
              - Effect: Allow
                Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuildBatches
                  - codebuild:StartBuildBatch
                Resource: !GetAtt
                  - BuildProject
                  - Arn
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketAcl
                  - s3:PutObjectAcl
                  - s3:GetBucketLocation
                Resource:
                  - !Sub 'arn:${AWS::Partition}:s3:::${S3BucketName}'
                  - !Sub 'arn:${AWS::Partition}:s3:::${S3BucketName}/*'
              - Effect: Allow
                Action:
                  - cloudformation:*
                Resource:
                  - !Sub 'arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${SamStackName}/*'
              - Action:
                - 'sts:AssumeRole'
                Resource:
                  - !Sub 'arn:aws:iam::${TestAccountId}:role/${ApplicationName}-pipeline-role'
                  - !Sub 'arn:aws:iam::${ProdAccountId}:role/${ApplicationName}-pipeline-role'
                Effect: Allow
      AssumeRolePolicyDocument:
        Statement:
          - Action: "sts:AssumeRole"
            Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
  BuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Join
        - '-'
        - - !Ref ApplicationName
          - build-project
      Description: A build project for !Ref ApplicationName
      ServiceRole: !Ref BuildProjectRole
      Artifacts:
        Type: CODEPIPELINE
        Packaging: ZIP
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        EnvironmentVariables:
          - Name: S3_BUCKET
            Type: PLAINTEXT
            Value: !Ref S3BucketName
      Cache:
        Type: S3
        Location: !Sub '${S3BucketName}/maven-cache'
      EncryptionKey: !Ref S3KmsKeyArn
      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            build:
              commands:
                - mvn clean package
                - sam package --template-file sam-template.yml --s3-bucket $S3_BUCKET --output-template-file out-sam-template.yml
          artifacts:
            files:
              - out-sam-template.yml
          cache:
            paths:
              - '/root/.m2/**/*'
  Pipeline:
    Description: Creating a deployment pipeline for !Ref ApplicationName project in AWS CodePipeline
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      RoleArn: !GetAtt
        - PipelineRole
        - Arn
      ArtifactStore:
        Type: S3
        Location: !Ref S3BucketName
        EncryptionKey:
          Id: !Ref S3KmsKeyArn
          Type: KMS
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeStarSourceConnection
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                ConnectionArn: !Ref GithubConnection
                FullRepositoryId: !Ref GithubRepo
                BranchName: !Ref GithubRepoBranch
                OutputArtifactFormat: "CODE_ZIP"
        - Name: Build
          Actions:
            - Name: Build
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: BuildOutput
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName:
                  Ref: BuildProject
        - Name: DeployTest
          Actions:
            - Name: DeployTest
              RunOrder: 1
              InputArtifacts:
                - Name: BuildOutput
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn: !Sub 'arn:aws:iam::${TestAccountId}:role/${ApplicationName}-deployer-role'
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND,CAPABILITY_IAM
                TemplatePath: !Sub 'BuildOutput::out-sam-template.yml'
                ParameterOverrides: !Sub '{"ApplicationName":"${ApplicationName}"}'
                StackName: !Ref SamStackName
              RoleArn: !Sub 'arn:aws:iam::${TestAccountId}:role/${ApplicationName}-pipeline-role'
        - Name: ApproveDeployProd
          Actions:
            - Name: ApproveDeployProd
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Version: 1
                Provider: Manual
              Configuration:
                CustomData: "Log into the TEST account and test out your changes before approving."
        - Name: DeployProd
          Actions:
            - Name: DeployProd
              RunOrder: 1
              InputArtifacts:
                - Name: BuildOutput
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn: !Sub 'arn:aws:iam::${ProdAccountId}:role/${ApplicationName}-deployer-role'
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND,CAPABILITY_IAM
                TemplatePath: !Sub 'BuildOutput::out-sam-template.yml'
                ParameterOverrides: !Sub '{"ApplicationName":"${ApplicationName}"}'
                StackName: !Ref SamStackName
              RoleArn: !Sub 'arn:aws:iam::${ProdAccountId}:role/${ApplicationName}-pipeline-role'
  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3BucketName
      PolicyDocument:
        Statement:
          - Action:
              - s3:*
            Effect: Allow
            Resource:
              - !Sub arn:aws:s3:::${S3BucketName}
              - !Sub arn:aws:s3:::${S3BucketName}/*
            Principal:
              AWS:
                - !Sub arn:aws:iam::${TestAccountId}:role/${ApplicationName}-pipeline-role
                - !Sub arn:aws:iam::${TestAccountId}:role/${ApplicationName}-deployer-role
                - !Sub arn:aws:iam::${ProdAccountId}:role/${ApplicationName}-pipeline-role
                - !Sub arn:aws:iam::${ProdAccountId}:role/${ApplicationName}-deployer-role
                - !GetAtt [ BuildProjectRole,Arn ]
                - !GetAtt [ PipelineRole,Arn ]